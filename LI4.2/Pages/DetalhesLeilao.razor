@page "/detalhesleilao/{leilaoId:int}"
@using Controllers
@using Authentication
@using Models
@inject ILeilaoController leilaoController
@inject IUserController userController
@inject NavigationManager navigationManager
@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject ILicitacaoController licitacaoController

<style>
    .form-box{
        background-color: #12232e;
    }
</style>

<PageTitle>@leilao.Titulo</PageTitle>

@if (leilao == null)
{
    <div class="flex items-center justify-center h-screen">
        <p class="text-white text-4xl text-center font-bold underline decoration-pink-500/30">Uhhh... The auction you're looking for does not exist.</p>
    </div>
}
else
{
    <div class="text-white text-3xl font-bold p-4 px-16">
        @leilao.Titulo
    </div>

    <div class="text-white">
        Imagens
    </div>

    <div class="grid grid-cols-2 text-white flex h-screen items-center justify-center">
    
        <div  class="mx-auto dark:bg-gray-800 px-4 p-4">
            <div  class="flex items-center justify-center text-center">
               
            </div>

            <div class="text-4xl capitalize mb-8">
                <a>current bid: €@leilao.ValorAtual</a>
            </div>

            <div class="text-3xl capitalize mb-8">
                Until: @leilao.FinalLeilao
            </div>



            <div class="text-xs mb-8">
                Minimum Bid: €@leilao.BidMinima
            </div>

            <div class="grid flex items-center justify-center text-center">
                <button class="text-3xl mb-5  bg-blue-500 text-blue
                    px-8 py-4 rounded-md hover:bg-blue-600 focus:outline-none
                    focus:border-blue-700 focus:ring focus:ring-blue-200
                    login-button mb-8" @onclick="UserPodeLicitar">
                        BID
                </button>
                @if (mostrarInputLicitar)
                {
                    <div class="">
                        <AuthorizeView>
                            <Authorized>
                                <div class="form-group text-white">
                                    <div class="mb-4">
                                        <label for="block text-sm font-semibold text-gray-600">Bidding Price</label>
                                        <InputNumber class="text-white w-full px-4 py-2 border rounded-md focus:outline-none focus:border-blue-500 form-box" id="valorLicitar" @bind-Value="valorLicitar" />
                                    </div>

                                    <div class="mb-2">
                                        <button class="mb-5 w-full bg-blue-500 text-blue px-4 py-2
                                                    rounded-md hover:bg-blue-600 focus:outline-none
                                                    focus:border-blue-700 focus:ring focus:ring-blue-200
                                                    login-button" @onclick="Licitar">Confirmar Licitação</button>
                                    </div>
                                    <div>@mensagem</div>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    </div>
                }
            </div>

        </div>
    
        <div class="mx-auto dark:bg-gray-800 px-4 p-4">
            <div class="grid grid-cols-2 gap-2">
                
                
                <div  class="text-xl font-bold">Car Details:</div>
                <div></div>

                <div>Model:</div>
                <div>@leilao.Marca</div>

                <div>Year:</div>
                <div>@leilao.Ano</div>

                <div>Doors:</div>
                <div>@leilao.Portas</div>
                
                <div>Exterior Color:</div>
                <div>@leilao.Cor</div>

                <div class="border-t mb-4"></div>
                <div></div>

                <div  class="text-xl font-bold">Engine:</div><div></div>
            
                <div>Fuel Type:</div>
                <div>@leilao.Combustivel</div>
                
                <div>Mileage:</div>
                <div>@leilao.Kilometragem</div>
                
                <div>Power:</div>
                <div>@leilao.Potencia (hp)</div>

                <div class="border-t mb-4"></div>
            </div>
        </div>

    </div>

    <div class="text-white text-center w-screen h-screen">
        @leilao.Descricao
    </div>

}

@code {
    [Parameter]
    public int? LeilaoId { get; set; }
    private VeiculoLeilao leilao;
    private string mensagem { get; set; }
    private string username { get; set; }
    private CustomAuthenticationStateProvider customAuthStateProvider { get; set; }
    private bool mostrarInputLicitar = false;
    private decimal valorLicitar;

    private async Task InitializeAsync()
    {
        customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        username = (await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;
    }

    protected override void OnInitialized()
    {
        if (LeilaoId.HasValue)
        {
            leilao = leilaoController.GetByID(LeilaoId.Value);
        }
        else
        {
            navigationManager.NavigateTo("/listarleiloes");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await InitializeAsync();
    }

    private async void UserPodeLicitar()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        if (!((await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.IsAuthenticated))
        {
            navigationManager.NavigateTo("/login");
            return;
        }

        var username = (await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;
        if (userController.HasMetodoPagamento(username) && userController.HasDetalhesEntrega(username))
        {
            ShowInputLicitar();

        }
        else
        {
            navigationManager.NavigateTo("/perfil");
        }
    }
    private void ShowInputLicitar()
    {

        mostrarInputLicitar = true;
        valorLicitar = leilao.ValorAtual + leilao.BidMinima;

    }

    private void Licitar()
    {
        Licitacao licitacao;
        if((leilao.ValorAtual + leilao.BidMinima) < valorLicitar)
        {
            mensagem = "O valor inserido é demasiado baixo!";
        }
        else
        {
            licitacao = new Licitacao(valorLicitar, username, leilao.Id);
            licitacaoController.Create(licitacao);
            leilao.ValorAtual = licitacao.Valor;
            leilao.IdLicitacaoLider = licitacao.Id;
            leilaoController.Update(leilao);
            mensagem = "";
        }
    }
}
