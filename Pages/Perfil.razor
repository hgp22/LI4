@page "/perfil"
@using Controllers
@using Authentication
@using Models
@inject IUserController userController
@inject AuthenticationStateProvider authStateProvider
@attribute [Authorize(Roles = "Administrator,User")]

<style>
    .form-box {
        background-color: #12232e;
    }
</style>

<div class="text-white">

    <div class="text-3xl font-bold dark:bg-gray-800 p-4 px-16">
        Profile
        <div class="text-2xl">Hello, @username!</div>
    </div>

    <div class=" items-center justify-center min-h-screen">
        <div class="grid  min-h-screen gap-4 p-20">
            <div class="dark:bg-gray-800 mb-8 p-4 px-4">

                <div class="text-2xl underline mb-8">Payment Method:</div>

                <div class="flex items-center justify-center mb-8">
                    <div class="">

                        <label>
                            <input type="radio" name="metodoPagamento" value="1" checked="@UserMetodoPagamento(1)" @onclick="() => SelecionarMetodoPagamento(1)" />
                            MBWAY
                        </label>
                        <a class="p-4"></a>
                        <label>
                            <input type="radio" name="metodoPagamento" value="2" checked="@UserMetodoPagamento(2)" @onclick="() => SelecionarMetodoPagamento(2)" />
                            PAYPAL
                        </label>
                        <a class="p-4"></a>
                        <label>
                            <input type="radio" name="metodoPagamento" value="3" checked="@UserMetodoPagamento(3)" @onclick="() => SelecionarMetodoPagamento(3)" />
                            VISA
                        </label>
                        <a class="p-4"></a>
                        <label>
                            <input type="radio" name="metodoPagamento" value="4" checked="@UserMetodoPagamento(4)" @onclick="() => SelecionarMetodoPagamento(4)" />
                            MULTIBANCO
                        </label>
                    </div>
                </div>
            </div>

            <div class="dark:bg-gray-800 mb-8 p-4 px-4">
                <div class="text-2xl underline mb-8">Delivery Details:</div>

                <div class="flex items-center justify-center mb-8">
                    <label>
                        <input type="radio" name="detalhesEntrega" value="1" checked="@UserDetalhesEntrega(1)" @onclick="() => SelecionarDetalhesEntrega(1)" />
                        House Delivery
                    </label>
                    <a class="p-4"></a>
                    <label>
                        <input type="radio" name="detalhesEntrega" value="2" checked="@UserDetalhesEntrega(2)" @onclick="() => SelecionarDetalhesEntrega(2)" />
                        On Store
                    </label>
                </div>
            </div>

            <div class="dark:bg-gray-800 mb-8 p-4 px-4">
                <div class="text-2xl underline mb-8">Change Profile Details:</div>

                <div class="grid grid-cols-2">
                    <div class="mx-auto">
                        <div class="font-bold mb-4">Change Password</div>
                        <div class="mb-4">
                            <label for="passwordAntiga" class="block text-sm font-semibold text-gray-600">
                                Old Password:
                            </label>
                            <input type="password" id="passwordAntiga" @bind="passwordAntiga"
                                   class="text-white w-full px-4 py-2 border rounded-md focus:outline-none focus:border-blue-500 form-box" />
                        </div>

                        <div class="mb-4">
                            <label class="block text-sm font-semibold text-gray-600" for="novaPassword">
                                New Password:
                            </label>
                            <input type="password" id="novaPassword" @bind="passwordNova"
                                   class="text-white w-full px-4 py-2 border rounded-md focus:outline-none focus:border-blue-500 form-box" />
                        </div>

                        <div class="mb-8">
                            <label class="block text-sm font-semibold text-gray-600" for="repetirNovaPassword">
                                Repeat New Password:
                            </label>
                            <input type="password" id="repetirNovaPassword" @bind="passwordNovaRepeticao"
                                   class="text-white w-full px-4 py-2 border rounded-md focus:outline-none focus:border-blue-500 form-box" />
                        </div>

                        <div class="mb-4">
                            <button class="mb-5 bg-blue-500 text-blue
                            px-2 p-2 rounded-md hover:bg-blue-600 focus:outline-none
                            focus:border-blue-700 focus:ring focus:ring-blue-200
                            login-button mb-8"
                                    @onclick="AlterarPassword">
                                Change to New Password
                            </button>
                            <p>@mensagem</p>
                        </div>
                    </div>

                    <div class="mx-auto">
                        <div>
                            <div class="font-bold mb-4">Change Email</div>

                            <div class="mb-4">
                                <label class="block text-sm font-semibold text-gray-600" for="passwordAntiga2">
                                    Old Email:
                                </label>
                                <input type="password" id="passwordAntiga2" @bind="passwordAntiga2"
                                       class="text-white w-full px-4 py-2 border rounded-md focus:outline-none focus:border-blue-500 form-box" />
                            </div>
                            <div class="mb-8">
                                <label class="block text-sm font-semibold text-gray-600" for="novoEmail">
                                    New Email:
                                </label>
                                <input type="email" id="novoEmail" @bind="emailNovo"
                                       class="text-white w-full px-4 py-2 border rounded-md focus:outline-none
                                    focus:border-blue-500 form-box" />
                            </div>

                            <button class="mb-5 bg-blue-500 text-blue
                            px-2 p-2 rounded-md hover:bg-blue-600 focus:outline-none
                            focus:border-blue-700 focus:ring focus:ring-blue-200
                            login-button mb-8"
                                    @onclick="AlterarEmail">
                                Change to New Email
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

@code {
    private string passwordAntiga { get; set; }
    private string passwordAntiga2 { get; set; }
    private string passwordNova { get; set; }
    private string passwordNovaRepeticao { get; set; }
    private string emailNovo{ get; set; }
    private string username { get; set; }
    private CustomAuthenticationStateProvider customAuthStateProvider { get; set; }
    private Utilizador user { get; set; }
    private string mensagem { get; set; }

    private async Task InitializeAsync()
    {
        customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        username = (await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;
        user = userController.GetByUsername(username);
    }

    protected override async Task OnInitializedAsync()
    {
        await InitializeAsync();
    }

    private void AlterarEmail()
    {
        if (VerificarPasswordAntiga(passwordAntiga2))
        {
            var user = userController.GetByUsername(username);
            if (user != null)
            {
                user.Email = emailNovo;
                if (userController.Update(user))
                {
                    mensagem = "Email alterado com sucesso!";
                }
            }
            else
            {
                mensagem = "Erro ao alterar email!";
            }
        }
        else
        {
            mensagem = "Password incorreta! ";
        }

    }

    private bool UserMetodoPagamento(int metodo)
    {
        if (user != null)
        {
            return user.MetodoPagamento == metodo;
        }
        return false;
    }

    private bool UserDetalhesEntrega(int detalhes)
    {
        if (user != null)
        {
            return user.DetalhesEntrega == detalhes;
        }
        return false;
    }

    private void SelecionarMetodoPagamento(int metodo)
    {
        if (user != null)
        {
            user.MetodoPagamento = metodo;
            userController.Update(user);
            StateHasChanged();
        }
    }

    private void SelecionarDetalhesEntrega(int detalhes)
    {
        if (user != null)
        {
            user.DetalhesEntrega = detalhes;
            userController.Update(user);
            StateHasChanged();
        }
    }

    private async void AlterarPassword()
    {
        if (VerificarPasswordAntiga(passwordAntiga) && NovaPasswordValida(passwordNova, passwordNovaRepeticao))
        {
            if (UpdatePassword(passwordNova))
            {
                mensagem = "Password atualizada com sucesso!";
            }
            else
            {
                mensagem = "Erro ao atualizar a password.";
            }
        }
        else
        {
            mensagem = "As passwords não estão corretas";
        }
    }

    private bool VerificarPasswordAntiga(string passwordAntiga)
    {
        var user = userController.GetByUsername(username);
        return user != null && user.Password == passwordAntiga;
    }

    private bool NovaPasswordValida(string passwordNova, string passwordNovaRepeticao)
    {
        return !string.IsNullOrEmpty(passwordNova) && passwordNova == passwordNovaRepeticao;
    }

    private bool UpdatePassword(string passwordNova)
    {
        var user = userController.GetByUsername(username);
        if (user != null)
        {
            user.Password = passwordNova;
            return userController.Update(user);
        }
        return false;
    }
}
