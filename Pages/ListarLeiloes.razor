@page "/listarleiloes"
@inject NavigationManager NavigationManager
@using Controllers
@using Models
@inject ILeilaoController leilaoController
@inject IMarcaController marcaController
@inject IModeloController modeloController
@inject IVeiculoController veiculoController
@inject ILicitacaoController licitacaoController
@inject IJSRuntime JSRuntime

<PageTitle>Auctions</PageTitle>

<div class="text-white">

    <div class="text-3xl font-bold dark:bg-gray-800 p-4 px-16">
        Auctions
    </div>

    <div class="flex items-center justify-center min-h-screen">
        <div style="width: 100rem; height: 30rem;" class="max-w-md">
            <ul class="list-group">
                @foreach (var leilao in leilaoController.GetAll())
                {
                    if (!leilao.LeilaoAcabou)
                    {
                        <li class="list-group-item">
                            <div class="border border-blue-500 mb-8">
                                <div class="grid grid-cols-2 flex p-4">

<<<<<<< Updated upstream
                                    <div class="mx-auto">
                                        <a>Imagem</a>
                                    </div>
=======
                                <div class="mx-auto">
                                    <img src="@GetFirstImage(leilao)">
                                </div>
>>>>>>> Stashed changes

                                    <div class="mx-auto">

                                        <div class="grid mb-4">

                                            <div class="text-l font-bold mb-2">
                                                <button @onclick="(() => VerLeilao(leilao.Id))">
                                                    @leilao.Titulo
                                                </button>
                                            </div>

                                            <div class="text-blue-500 text-l mb-2">
                                                <button @onclick="(() => VerLeilao(leilao.Id))">
                                                    €@(licitacaoController.GetByID(leilao.IdLicitacaoAtual) == null ? leilao.ValorInicial : licitacaoController.GetByID(leilao.IdLicitacaoAtual).Valor)
                                                </button>
                                            </div>

                                            <div>
                                                <a class="text-xs">
                                                    @marcaController.GetById(veiculoController.GetById(leilao.IdVeiculo).IdMarca).Nome
                                                    @modeloController.GetById(veiculoController.GetById(leilao.IdVeiculo).IdModelo).Nome
                                                    (@veiculoController.GetById(leilao.IdVeiculo).Ano)
                                                </a>
                                            </div>
                                        </div>

                                        <div class="mb-5 border-t"></div>

                                        <div class="font-bold text-xs mb-2">
                                            <button @onclick="(() => VerLeilao(leilao.Id))">
                                                <span class="countdown" data-leilao-id="@leilao.Id" data-end-time="@leilao.DataFinal.ToString("o")"></span>
                                            </button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>

</div>



<script>
    function updateCountdown() {
        var elements = document.querySelectorAll('.countdown');

        elements.forEach(function (element) {
            var leilaoId = element.getAttribute('data-leilao-id');
            var endTime = new Date(element.getAttribute('data-end-time')).getTime();
            var timeRemaining = Math.max(0, (endTime - Date.now()) / 1000);

            var days = Math.floor(timeRemaining / 86400);
            var hours = Math.floor((timeRemaining % 86400) / 3600);
            var minutes = Math.floor((timeRemaining % 3600) / 60);
            var seconds = Math.floor(timeRemaining % 60);

            element.innerHTML = 'Time Left: ' + days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's ';
        });
    }

    setInterval(updateCountdown, 1000);
</script>

@code {
    private void VerLeilao(int leilaoId)
    {
        NavigationManager.NavigateTo($"/detalhesleilao/{leilaoId}");
    }

    private string GetFirstImage(Leilao leilao)
    {
        string directoryPath = $"wwwroot/Images/{leilao.Id}";
        try
        {
            if (Directory.Exists(directoryPath))
            {
                string[] imageFiles = Directory.GetFiles(directoryPath, "0.*");
                if (imageFiles.Any())
                {
                    string firstImage = imageFiles.First();
                    string relativePath = Path.GetRelativePath("wwwroot", firstImage);
                    return "/" + relativePath.Replace(Path.DirectorySeparatorChar, '/');
                }
            }
        }
        catch (Exception ex)
        {
            // Handle or log the exception
            Console.WriteLine($"Error accessing images: {ex.Message}");
        }
        return "";
    }

}

