@page "/licitacoes"
@using Controllers
@using Authentication
@using Models
@inject ILicitacaoController licitacaoController
@inject ILeilaoController leilaoController
@inject IVeiculoController veiculoController
@inject IMarcaController marcaController
@inject IModeloController modeloController
@inject ILicitacaoController licitacaoController
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Administrator,User")]

<div class="text-white">

    <div class="font-bold p-4 px-16 mb-8">
        <div class="text-3xl gap-4">My Auctions</div>
    </div>

</div>

@if (licitacoes != null && licitacoes.Any())
{
    <div class="text-white flex justify-center">
        <div class="grid grid-cols-1 gap-4 w-full max-w-screen-xl mx-auto">
            @foreach (var licitacao in licitacoes.OrderByDescending(l => l.Data))
            {
                <div class="w-full border p-4 mb-8 flex items-center mx-4">
                    <div class="w-1/4 pr-4">
                        <img src="@GetFirstImage(leilaoController.GetByID(licitacao.IdLeilao))" class="h-full w-full object-cover rounded">
                    </div>
                    <div class="w-3/4">
                        <div class="grid p-4">
                            <div class="card ">
                                <div class="card-body">
                                    <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                        @leilaoController.GetByID(licitacao.IdLeilao).Titulo
                                    </button>

                                    <div class="mb-2">
                                        <a class="font-bold text-blue-500">Your Bid: €</a> <a class="font-bold text-blue-500">@licitacao.Valor</a>
                                    </div>
                                    @if (leilaoController.GetByID(licitacao.IdLeilao).IdLicitacaoAtual == licitacao.Id && leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                    {
                                        <div class="font-bold text-blue-500 text-xs mb-2">
                                            Time Left: SOLD!
                                        </div>
                                        <div class="font-bold text-green-500 text-xs mb-2">
                                            WON!
                                        </div>
                                        
                                    }
                                    else if (leilaoController.GetByID(licitacao.IdLeilao).IdLicitacaoAtual == licitacao.Id && !leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                    {
                                        <div class="font-bold text-blue-500 text-xs mb-2">
                                            <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                                <span class="countdown" data-leilao-id="@leilaoController.GetByID(licitacao.IdLeilao).Id" data-end-time="@leilaoController.GetByID(licitacao.IdLeilao).DataFinal.ToString("o")"></span>
                                            </button>
                                        </div>
                                        <div class="font-bold text-green-500 text-xs mb-2">
                                            BID IS WINNING!
                                        </div>
                                    }
                                    else if (!leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                    {
                                        <div class="font-bold text-blue-500 text-xs mb-2">

                                            <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                                <span class="countdown" data-leilao-id="@leilaoController.GetByID(licitacao.IdLeilao).Id" data-end-time="@leilaoController.GetByID(licitacao.IdLeilao).DataFinal.ToString("o")"></span>
                                            </button>
                                        </div>

                                        <div class="font-bold text-red-500 text-xs mb-2">
                                            YOUR BID HAS BEEN COVERED!
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="font-bold text-blue-500 text-xs mb-2">
                                            Time Left: SOLD!
                                        </div>
                                    }

                                    <div class="mb-2 border-t"></div>

                                    <div class="font-bold text-xs">Date: @licitacao.Data</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            }
        </div>
    </div>
    <div class="min-h-screen"></div>
}
else
{
    <div class="text-white min-h-screen flex justify-center">
        <p class="text-3xl px-8 p-8 underline decoration-double">Sem licitações disponíveis.</p>
    </div>

}

<script>
    function updateCountdown() {
        var elements = document.querySelectorAll('.countdown');

        elements.forEach(function (element) {
            var leilaoId = element.getAttribute('data-leilao-id');
            var endTime = new Date(element.getAttribute('data-end-time')).getTime();
            var timeRemaining = Math.max(0, (endTime - Date.now()) / 1000);

            var days = Math.floor(timeRemaining / 86400);
            var hours = Math.floor((timeRemaining % 86400) / 3600);
            var minutes = Math.floor((timeRemaining % 3600) / 60);
            var seconds = Math.floor(timeRemaining % 60);

            element.innerHTML = 'Time Left: ' + days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's ';
        });
    }

    setInterval(updateCountdown, 1000);
</script>

@code {
    private List<Licitacao> licitacoes;

    private async Task InitializeAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        var username = (await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;

        licitacoes = licitacaoController.GetAllDeUser(username);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await InitializeAsync();
    }

    private void VerLeilao(int leilaoId)
    {
        NavigationManager.NavigateTo($"/detalhesleilao/{leilaoId}");
    }

    private string GetFirstImage(Leilao leilao)
    {
        string directoryPath = $"wwwroot/Images/{leilao.Id}";
        try
        {
            if (Directory.Exists(directoryPath))
            {
                string[] imageFiles = Directory.GetFiles(directoryPath, "0.*");
                if (imageFiles.Any())
                {
                    string firstImage = imageFiles.First();
                    string relativePath = Path.GetRelativePath("wwwroot", firstImage);
                    return "/" + relativePath.Replace(Path.DirectorySeparatorChar, '/');
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error accessing images: {ex.Message}");
        }
        return "";
    }
}
