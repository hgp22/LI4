@page "/licitacoes"
@using Controllers
@using Authentication
@using Models
@inject ILicitacaoController licitacaoController
@inject ILeilaoController leilaoController
@inject IVeiculoController veiculoController
@inject IMarcaController marcaController
@inject IModeloController modeloController
@inject ILicitacaoController licitacaoController
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Administrator,User")]

<div class="text-white">

    <div class="font-bold dark:bg-gray-800 p-4 px-16 mb-8">
        <div class="text-3xl gap-4">My Auctions Record</div>
    </div>

</div>

@if (licitacoes != null && licitacoes.Any())
{
    <div class="row text-white flex justify-center">
        <div class="grid grid-cols-3 gap-4">
            @foreach (var licitacao in licitacoes.OrderByDescending(l => l.Data))
            {
                <div class="max-w-md border p-4">
                    <div class="grid p-4">
                        <div class="card ">
                            <div class="card-body">
                                <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                    @leilaoController.GetByID(licitacao.IdLeilao).Titulo
                                </button>
                                @if (leilaoController.GetByID(licitacao.IdLeilao).IdLicitacaoAtual == licitacao.Id && leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                {
                                    <div class="font-bold text-red-500 text-xs mb-2">
                                        AUCTION ENDED!
                                        WINNER!
                                    </div>
                                }
                                else if (leilaoController.GetByID(licitacao.IdLeilao).IdLicitacaoAtual == licitacao.Id && !leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                {
                                    <div class="font-bold text-blue-500 text-xs mb-2">
                                        BID IS WINNING!
                                    </div>
                                    <div class="font-bold text-blue-500 text-xs mb-2">
                                        <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                            <span class="countdown" data-leilao-id="@leilaoController.GetByID(licitacao.IdLeilao).Id" data-end-time="@leilaoController.GetByID(licitacao.IdLeilao).DataFinal.ToString("o")"></span>
                                        </button>
                                    </div>
                                }
                                else if (!leilaoController.GetByID(licitacao.IdLeilao).LeilaoAcabou)
                                {
                                    <div class="font-bold text-red-500 text-xs mb-2">
                                        YOUR BID HAS BEEN COVERED!
                                    </div>
                                    <div class="font-bold text-blue-500 text-xs mb-2">

                                        <button @onclick="(() => VerLeilao(leilaoController.GetByID(licitacao.IdLeilao).Id))">
                                            <span class="countdown" data-leilao-id="@leilaoController.GetByID(licitacao.IdLeilao).Id" data-end-time="@leilaoController.GetByID(licitacao.IdLeilao).DataFinal.ToString("o")"></span>
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="font-bold text-red-500 text-xs mb-2">
                                        AUCTION ENDED!
                                    </div>
                                }
                                <div class="mb-2">
                                    @marcaController.GetById(veiculoController.GetById(leilaoController.GetByID(licitacao.IdLeilao).IdVeiculo).IdMarca).Nome
                                </div>

                                <div class="mb-2">
                                    <a>Valor da Licitação:</a> <a class="font-bold text-blue-500">@licitacao.Valor€</a>
                                </div>

                                <div class="mb-2 border-t"></div>

                                <div class="font-bold text-xs">Data e Hora: @licitacao.Data</div>
                            </div>
                        </div>
                    </div>
                </div>


            }
        </div>
    </div>
    <div class="min-h-screen"></div>
}
else
{
    <div class="text-white min-h-screen flex justify-center">
        <p class="text-3xl px-8 p-8 underline decoration-double">Sem licitações disponíveis.</p>
    </div>

}

<script>
    function updateCountdown() {
        var elements = document.querySelectorAll('.countdown');

        elements.forEach(function (element) {
            var leilaoId = element.getAttribute('data-leilao-id');
            var endTime = new Date(element.getAttribute('data-end-time')).getTime();
            var timeRemaining = Math.max(0, (endTime - Date.now()) / 1000);

            var days = Math.floor(timeRemaining / 86400);
            var hours = Math.floor((timeRemaining % 86400) / 3600);
            var minutes = Math.floor((timeRemaining % 3600) / 60);
            var seconds = Math.floor(timeRemaining % 60);

            element.innerHTML = 'Time Left: ' + days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's ';
        });
    }

    setInterval(updateCountdown, 1000);
</script>

@code {
    private List<Licitacao> licitacoes;

    private async Task InitializeAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        var username = (await customAuthStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;

        licitacoes = licitacaoController.GetAllDeUser(username);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await InitializeAsync();
    }

    private void VerLeilao(int leilaoId)
    {
        NavigationManager.NavigateTo($"/detalhesleilao/{leilaoId}");
    }
}
